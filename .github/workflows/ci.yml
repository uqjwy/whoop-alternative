name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  ZEPHYR_VERSION: v3.4.0
  FLUTTER_VERSION: 3.16.0

jobs:
  firmware-build:
    name: Build Firmware
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: whoop-alternative

    - name: Cache West modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          .west
        key: ${{ runner.os }}-west-${{ env.ZEPHYR_VERSION }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install West
      run: |
        pip install west

    - name: Initialize West workspace
      run: |
        west init -m https://github.com/nrfconnect/sdk-nrf --mr v2.5.0
        west update
        west zephyr-export

    - name: Install dependencies
      run: |
        pip install -r zephyr/scripts/requirements.txt

    - name: Build firmware
      run: |
        cd whoop-alternative/firmware/app
        west build -b nrf52840dk_nrf52840 --pristine

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-build
        path: |
          whoop-alternative/firmware/app/build/zephyr/zephyr.hex
          whoop-alternative/firmware/app/build/zephyr/zephyr.bin
          whoop-alternative/firmware/app/build/zephyr/zephyr.elf

  mobile-app-test:
    name: Test Mobile App
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Flutter doctor
      run: flutter doctor -v

    - name: Get dependencies
      run: |
        cd app/mobile
        flutter pub get

    - name: Analyze code
      run: |
        cd app/mobile
        flutter analyze

    - name: Run tests
      run: |
        cd app/mobile
        flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: app/mobile/coverage/lcov.info
        flags: mobile-app

  mobile-app-build:
    name: Build Mobile App
    runs-on: ubuntu-latest
    needs: mobile-app-test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Get dependencies
      run: |
        cd app/mobile
        flutter pub get

    - name: Build APK
      run: |
        cd app/mobile
        flutter build apk --release

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: mobile-app-apk
        path: app/mobile/build/app/outputs/flutter-apk/app-release.apk

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install mkdocs mkdocs-material

    - name: Build documentation
      run: |
        cd docs
        mkdocs build

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/site

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install pre-commit
      run: |
        pip install pre-commit

    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files

    - name: Check for large files
      run: |
        find . -size +100M -type f -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
